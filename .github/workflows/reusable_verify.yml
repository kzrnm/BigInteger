name: test

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]
  workflow_dispatch:
  workflow_call:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  WORKFLOW_BUILD_SLN: BigInteger.sln

jobs:
  build-resolve:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            7.0.x
      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Build.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Trim solution
        run: |
          sed -i -e '/{A5D5BABD-B64E-439B-9904-068AE1432504}\./d' $WORKFLOW_BUILD_SLN
          sed -i -e '/{A5D5BABD-B64E-439B-9904-068AE1432504} =/d' $WORKFLOW_BUILD_SLN
          sed -i -e '/= "BigInteger.Benchmark"/d' $WORKFLOW_BUILD_SLN
          sed -i -E "N;s/EndProject\r?\nEndProject/EndProject/g" $WORKFLOW_BUILD_SLN

      - name: Build
        shell: bash
        run: dotnet build $WORKFLOW_BUILD_SLN -c Release
      - name: setup CompetitiveVerifierCsResolver
        shell: bash
        run: dotnet tool install -g CompetitiveVerifierCsResolver

      - name: Unit test
        run: dotnet test

      - name: Build release
        run: dotnet build -c Release
      - name: Resolve net8.0
        run: dotnet run --project $VERIFY_CSPROJ --framework $FRAMEWORK --no-launch-profile --no-build -c Release | tee "${{runner.temp}}/problems-$FRAMEWORK.json"
        env:
          VERIFY_CSPROJ: BigInteger.Test.LibraryChecker/BigInteger.Test.LibraryChecker.csproj
          FRAMEWORK: net8.0
      - name: Resolve net7.0
        run: dotnet run --project $VERIFY_CSPROJ --framework $FRAMEWORK --no-launch-profile --no-build -c Release | tee "${{runner.temp}}/problems-$FRAMEWORK.json"
        env:
          VERIFY_CSPROJ: BigInteger.Test.LibraryChecker/BigInteger.Test.LibraryChecker.csproj
          FRAMEWORK: net7.0

      - name: cs-resolve
        uses: competitive-verifier/actions/cs-resolve@v1
        with:
          solution: ${{ env.WORKFLOW_BUILD_SLN }}
          output-path: verify_files.json
          include: BigInteger/** BigInteger.Test.LibraryChecker/**
          exclude: BigInteger.Test.LibraryChecker/BaseSolver.cs **/obj/**
          problems: ${{runner.temp}}/problems-*.json
          msbuild-properties: Configuration=Release
      - name: Upload verify_files.json
        uses: competitive-verifier/actions/upload-verify-artifact@v1
        with:
          file: verify_files.json
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{github.sha}}
          path: BigInteger.Test.LibraryChecker/bin/Release
          if-no-files-found: error

  verify:
    runs-on: ubuntu-latest
    needs: [build-resolve]
    env:
      SPLIT_SIZE: 12
    strategy:
      matrix:
        # prettier-ignore
        index:
          ["0", "1", "2", "3", "4", "5", 
           "6", "7", "8", "9", "10", "11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v1
        with:
          python-version: "3.9"
          cache-pip: true

      - name: Download verify_files.json
        uses: competitive-verifier/actions/download-verify-artifact@v1

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            7.0.x
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binary-${{github.sha}}
          path: BigInteger.Test.LibraryChecker/bin/Release

      - name: Warm up checker
        run: |
          for checker in $(ls BigInteger.Test.LibraryChecker/bin/Release/*/BigInteger.Test.LibraryChecker.dll); do
            echo "Warm up $checker"
            dotnet $checker
          done

      - name: Verify
        uses: competitive-verifier/actions/verify@v1
        with:
          destination: ${{runner.temp}}/result.json
          split-size: ${{ env.SPLIT_SIZE }}
          split-index: ${{ matrix.index }}
          write-summary: true
          timeout: 1200
      - name: Upload result artifact
        uses: actions/upload-artifact@v3
        with:
          name: Result-${{ runner.os }}-${{ matrix.index }}
          path: ${{runner.temp}}/result.json
          retention-days: 1

  docs-and-check:
    runs-on: ubuntu-latest
    needs: [verify]
    outputs:
      upload-pages: ${{steps.upload-pages.outcome == 'success'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 123456789

      - name: Download verify_files.json and all artifacts
        id: all-artifacts
        uses: competitive-verifier/actions/download-verify-artifact@v1
        with:
          download-all: true
          artifact-root: .artifacts/

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v1
        with:
          cache-pip: true

      - name: Merge results
        uses: competitive-verifier/actions/merge-result@v1
        with:
          working-directory: Library/.competitive-verifier
          result-files: ${{ steps.all-artifacts.outputs.artifacts-root }}/Result-*/result.json
          output-path: ${{github.workspace}}/merged-result.json

      - name: Docs
        uses: competitive-verifier/actions/docs@v1
        with:
          verify-result: ${{github.workspace}}/merged-result.json
          destination: ${{github.workspace}}/_jekyll
          write-summary: true

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: _jekyll
          destination: _site
      - name: Upload artifact
        id: upload-pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: _site
