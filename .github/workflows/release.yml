name: Release

on:
  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_NOLOGO: true
  NUGET_XMLDOC_MODE: skip
  WORKFLOW_BUILD_SLN: BigInteger.sln
  PACK_CSPROJ: BigInteger/BigInteger.csproj

permissions:
  contents: write

jobs:
  get-version:
    uses: kzrnm/dotnet-actions/.github/workflows/get-version.yml@v1
    with:
      project-path: BigInteger/BigInteger.csproj

  build:
    runs-on: ubuntu-latest
    needs: [get-version]
    env:
      VERSION: ${{needs.get-version.outputs.version}}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            8.0.x
            7.0.x
      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Build.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Build
        run: dotnet build ${{ env.WORKFLOW_BUILD_SLN }} -c Release -p:Version=$VERSION
      - name: Test
        run: dotnet test ${{ env.WORKFLOW_BUILD_SLN }} --no-build --logger GitHubActions -c Release
      - name: Pack
        run: dotnet pack ${{ env.PACK_CSPROJ }} --no-build -c Release -o bin/Packages/Release -p:Version=$VERSION
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: bin/Packages/Release

  publish:
    needs: [get-version, build]
    uses: kzrnm/dotnet-actions/.github/workflows/publish.yml@v1
    with:
      artifact-name: dist
      version: ${{ needs.get-version.outputs.version }}
      is-prerelease: ${{ fromJson(needs.get-version.outputs.is-prerelease) }}
    secrets:
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
